user www-data;
worker_processes auto;
pid /var/run/nginx.pid;
error_log  <%= node[:nginx][:log_dir] %>/nginx_error.log debug;
load_module modules/ngx_http_modsecurity_module.so;

events {
  worker_connections 1024;
  use epoll;
  multi_accept on;
}

http {
  server_tokens off;
  client_max_body_size 50M;
  keepalive_timeout 65;
  keepalive_requests 100000;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  map $uri $apicall {
        default $binary_remote_addr;
        ~list_app_revisions "";
        ~get_app_spec "";
        ~activity_reports "";
        ~get_upload_url "";
        ~create_file "";
        ~close_file "";
        ~participants "";
  }
  #limit_req_zone $apicall zone=pfdazone:10m rate=5r/s;

  server {
   listen 80 default_server;
   listen [::]:80 default_server;

   server_name _;

   return 301 https://$host$request_uri;
  }

  server {
    server_name <%= @app_domain %>;
    access_log <%= node[:nginx][:log_dir] %>/<%= @app_domain %>-ssl.access.log;

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    <%= render 'ssl_settings.conf.erb' %>

    modsecurity on;
    modsecurity_rules_file /usr/local/conf/modsecurity.conf;

    # Reverse proxy to UNII site on CloudFront
    location /uniisearch {
      proxy_pass https://<%= @unii_host %>$uri$is_args$args;
      proxy_set_header Host <%= @unii_host %>;
      resolver 8.8.8.8;
    }

    root /srv/pfda/public;

    try_files $uri/index.html $uri @pfda;

    location @pfda {
      #limit_req zone=pfdazone burst=20 nodelay;
      proxy_pass https://pfda;
      <%= render 'proxy_settings.conf.erb' %>
    }

     error_page 500 502 503 504 /500.html;
     client_max_body_size 4G;
     keepalive_timeout 10;

     client_body_timeout 5s;
     client_header_timeout 5s;

    add_header X-Request-ID $request_id;
  }

  upstream pfda {
    server localhost:3000 fail_timeout=0;
  }
}

