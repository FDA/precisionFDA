{"version":3,"sources":["../src/wrapWithSimpleWrapper.jsx"],"names":["wrap","propTypes","children","isRequired","PropTypes","node","defaultProps","undefined","Wrapper","React","version","SimpleSFCWrapper","SimpleClassWrapper","props","Component","element"],"mappings":";;;;;;;;qBA+BwBA,I;;;;;;AA/BxB;;;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMC,YAAY;AAChBC,YAAU,yBAAG,CAAC,qCAAeC,UAAhB,EAA4BC,uBAAUC,IAAV,CAAeF,UAA3C,CAAH;AADM,CAAlB;;AAIA,IAAMG,eAAe;AACnBJ,YAAUK;AADS,CAArB;;AAIA,IAAMC,UAAU,CAAC,wBAAW,SAAX,EAAsBC,mBAAMC,OAA5B;AACf;AADe,EAEb;AAAA,SAAM;AAAc,aAASC,gBAAT,OAAwC;AAAA,UAAZT,QAAY,QAAZA,QAAY;;AAC5D,aAAOA,QAAP;AACD;;AAFO,WAAuBS,gBAAvB;AAAA,OAEL,EAAEV,oBAAF,EAAaK,0BAAb,EAFK,CAAN;AAAA,CAFa,GAKb,YAAM;AAAA,MACAM,kBADA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,0BAEK;AAAA,cACCV,QADD,GACc,KAAKW,KADnB,CACCX,QADD;;AAEP,iBAAOA,QAAP;AACD;;AALG;AAAA;AAAA;;AAAA;AAAA,IAC2BO,mBAAMK,SADjC;;AAONF,qBAAmBX,SAAnB,GAA+BA,SAA/B;AACAW,qBAAmBN,YAAnB,GAAkCA,YAAlC;AACA,SAAOM,kBAAP;AACD,CAfa,GAAhB;;AAkBe,SAASZ,IAAT,CAAce,OAAd,EAAuB;AACpC,SAAO;AAAC,WAAD;AAAA;AAAUA;AAAV,GAAP;AACD","file":"wrapWithSimpleWrapper.js","sourcesContent":["import React from 'react';\nimport { intersects } from 'semver';\nimport { or, explicitNull } from 'airbnb-prop-types';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  children: or([explicitNull().isRequired, PropTypes.node.isRequired]),\n};\n\nconst defaultProps = {\n  children: undefined,\n};\n\nconst Wrapper = (intersects('>= 0.14', React.version)\n  // eslint-disable-next-line prefer-arrow-callback\n  ? () => Object.assign(function SimpleSFCWrapper({ children }) {\n    return children;\n  }, { propTypes, defaultProps })\n  : () => {\n    class SimpleClassWrapper extends React.Component {\n      render() {\n        const { children } = this.props;\n        return children;\n      }\n    }\n    SimpleClassWrapper.propTypes = propTypes;\n    SimpleClassWrapper.defaultProps = defaultProps;\n    return SimpleClassWrapper;\n  }\n)();\n\nexport default function wrap(element) {\n  return <Wrapper>{element}</Wrapper>;\n}\n"]}