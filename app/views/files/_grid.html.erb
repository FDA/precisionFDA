<% toggle_all_descriptions = content_tag(:a, nil, href: '#', class: 'fa fa-info-circle', 'data-bind' => 'click: toggleAll') %>

<%= grid(files_grid, show_filters: defined?(show_filters) ? show_filters : :always) do |g|
  if defined?(clear_blank_state) && clear_blank_state
    g.blank_slate { '' }
  else
    g.blank_slate partial: "_partials/empty_grid"
  end


  g.after_row do |file, num_cols|
    if file.description.present?
      content_tag(:tr,
        content_tag(:td,
          content_tag(:div, file.description, class: 'description'),
        colspan: num_cols, class: 'wrap-normal'),
      class: 'extra-row hidden', 'data-bind' => "css: { hidden: !isVisible(#{file.id}) }")
    end
  end

  if defined?(show_checkboxes) && show_checkboxes
    g.action_column html_check_box: true
  end

  g.column name: 'Name', attribute: 'name' do |file|
    unilinkfw(file, scope_icon: (defined?(scope_icon) ? scope_icon : true))
  end

  g.column name: toggle_all_descriptions do |file|
    if file.description.present?
      content_tag(:a, nil, href: '#', class: 'fa fa-info-circle', 'data-bind' => "click: function() { toggle(#{file.id}) }")
    end
  end

  g.column name: 'Type', attribute: 'sti_type' do |file|
    case file.klass
      when "file"
        "File"
      when "folder"
        "Folder"
      else
        "Unknown"
    end
  end

  g.column name: 'Org', attribute: 'handle', assoc: [:user, :org] do |file|
    file.user.org.handle
  end

  g.column name: 'Added by', attribute: 'dxuser', assoc: :user do |file|
    link_to(file.user.dxuser, user_path(file.user.dxuser))
  end

  g.column name: 'Size', attribute: 'file_size', filter_type: :file_size do |file|
    number_to_human_size(file.file_size)
  end

  g.column name: 'Origin' do |file|
    if file.klass == "folder"
      nil
    elsif file.parent_type == "Node" && file.parent.blank?
      "Copied"
    elsif file.parent_type != "User"
      unilinkfw(file.parent)
    else
      "Uploaded"
    end
  end

  g.column name: 'Created', attribute: 'created_at', auto_reload: true, filter_type: :standard do |file|
    file.created_at.to_s(:human)
  end

  g.column name: 'State', attribute: 'state', allow_multiple_selection: false, custom_filter: :auto

  if !defined?(hide_access) || !hide_access
    g.column name: 'Access', attribute: 'scope', allow_multiple_selection: false,
      custom_filter: {'Public' => "public", 'Private' => "private"} do |file|
      if file.public?
        "Public"
      elsif file.private?
        "Private"
      else
        unilinkfw(item_from_uid(file.scope))
      end
    end
  end

  g.column name: 'Tags', attribute: 'name', assoc: [:taggings, :tag] do |item|
    render "_partials/tags_list", tags_list: item.all_tags_list
  end
end -%>
