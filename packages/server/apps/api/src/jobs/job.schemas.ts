// eslint-disable-next-line import/no-extraneous-dependencies
import { schemas } from '@shared/utils/base-schemas'
import { JSONSchema7 } from 'json-schema'

export const jobListQuerySchema: JSONSchema7 = {
  type: 'object',
  properties: {
    scope: { type: 'string', default: false },
    spaceId: { type: 'string', default: false },
    ...schemas.paginationSchema.properties,
  },
  required: [],
  additionalProperties: true,
}

export type WorkstationAliveParams = {
  code: string
}

// 'code' is authorization_code generated by platform to authenticate against the workstation
// 'key' is used by the CLI to authenticate against the pFDA backend
export type JobSetAPIKeyParams = {
  code: string
  key: string
}

// 'code' is authorization_code generated by platform to authenticate against the workstation
// 'key' is used by the CLI to authenticate against the pFDA backend
export type JobSnapshotParams = {
  // TODO: Before we expose nodejs-api as an externally accessible endpoint make sure
  //       we also migrate CLI key generation and platform auth code creation to nodejs first.
  key: string
  code: string
  name: string
  terminate?: boolean
}

export const workstationAliveBodySchema: JSONSchema7 = {
  type: 'object',
  properties: {
    code: { type: 'string' },
  },
  required: ['code'],
  additionalProperties: true,
}

export const jobSetAPIKeyBodySchema: JSONSchema7 = {
  type: 'object',
  properties: {
    code: { type: 'string' },
    key: { type: 'string' },
  },
  required: ['code', 'key'],
  additionalProperties: true,
}

export const jobSnapshotBodySchema: JSONSchema7 = {
  type: 'object',
  properties: {
    key: { type: 'string' },
    code: { type: 'string' },
    name: { type: 'string' },
    terminate: { type: 'boolean', default: false },
  },
  required: ['key', 'code', 'name'],
  additionalProperties: true,
}
